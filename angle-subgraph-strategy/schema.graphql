type StrategyData @entity {
  # Address of the strategy
  id: ID!
  # Address of the poolManager
  poolManager: String
  # Name of the stable
  stableName: String!
  # Name of the collateral
  collatName: String!
  # Collateral Decimal
  decimals: BigInt!
  # Lender data
  lenders: [LenderData!]! @derivedFrom(field: "strategy")
  # Total liquidity in the strategy
  totalDebt: BigInt!
  # DebtRatio the strategy
  debtRatio: BigInt!
  # Balance of the poolManager
  managerBalance: BigInt!
  # Total assets of the poolManager
  totalAsset: BigInt!
  # Estimated APR
  apr: BigInt!
  # Timestamp of last update
  timestamp: BigInt!
}

type StrategyHistoricalData @entity {
  # Address of the strategy + block number
  id: ID!
  # Address of the poolManager
  poolManager: String!
  # Name of the stable
  stableName: String!
  # Name of the collateral
  collatName: String!
  # Collateral Decimal
  decimals: BigInt!
  # Total liquidity in the strategy
  totalDebt: BigInt!
  # DebtRatio the strategy
  debtRatio: BigInt!
  # Balance of the poolManager
  managerBalance: BigInt!
  # Total assets of the poolManager
  totalAsset: BigInt!
  # Estimated APR
  apr: BigInt!
  # Timestamp of last update
  timestamp: BigInt!
}

type LenderData @entity {
  # Address of the genericLender
  id: ID!
  # name of the lender
  name: String!
  # Name of the strategy
  strategy: StrategyData!
  # Total liquidity in the lender
  nav: BigInt!
  # Estimated APR
  apr: BigInt!
}

type Contracts @entity {
  id: ID!
}
